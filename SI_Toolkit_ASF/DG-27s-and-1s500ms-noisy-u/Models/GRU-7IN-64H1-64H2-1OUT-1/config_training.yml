library: 'TF'  # TF or Pytorch
modeling:
  NET_NAME: 'GRU-64H1-64H2'
paths:
  # PATH HAS TO END WITH A SOLIDUS ("/") CHARACTER
  path_to_experiment: 'DG-27s-and-1s500ms-noisy-u/'
  PATH_TO_EXPERIMENT_FOLDERS: './SI_Toolkit_ASF/Experiments/'  # Path where the experiments data is stored

training_default:
  # For training closed loop dynamics model:
#  control_inputs: ['Q']
#  state_inputs: ['angle_sin', 'angle_cos', 'angleD', 'position', 'positionD']
  setpoint_inputs: []  # Can be only 'target_position' or empty for CartPole
#  outputs: ['angle_sin', 'angle_cos', 'angleD', 'position', 'positionD']
  #  outputs: ['D_angle_sin', 'D_angle_cos', 'D_angleD', 'D_position', 'D_positionD'] # Don't forget to change SHIFT_LABELS to 0
  translation_invariant_variables: []
  # For training open loop dynamics model:
  # inputs = ['position', 'positionD', 'angle_sin', 'angle_cos', 'angleD']
  # outputs = inputs_list
  # For training of a network imitating MPC:
  control_inputs: []
  state_inputs: ['position', 'positionD', 'angle_cos', 'angle_sin', 'angleD', 'u-1']
#  state_inputs: ['position', 'positionD', 'angle_cos', 'angle_sin', 'angleD', 'target_position', 'target_equilibrium', 'u_-1']
  outputs:  ['L']
  EPOCHS: 30
  BATCH_SIZE: 32
  SEED: 1873
  LR: 1.0e-3
  WASH_OUT_LEN: 25
  POST_WASH_OUT_LEN: 5
  ON_FLY_DATA_GENERATION: False
  NORMALIZE: True
  SHIFT_LABELS: 0  # for k, as a label to row i is taken row i+k
  USE_NNI: False  # Decide if you want to use NNI package
  CONSTRUCT_NETWORK: 'with cells'  # Matters only for Pytorch; 'with cells' or 'with modules'

